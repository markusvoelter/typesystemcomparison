/*
* generated by Xtext
*/
package org.typesys.xts.guidsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.typesys.xts.guidsl.services.GuiDslGrammarAccess;

public class GuiDslParser extends AbstractContentAssistParser {
	
	@Inject
	private GuiDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.typesys.xts.guidsl.ui.contentassist.antlr.internal.InternalGuiDslParser createParser() {
		org.typesys.xts.guidsl.ui.contentassist.antlr.internal.InternalGuiDslParser result = new org.typesys.xts.guidsl.ui.contentassist.antlr.internal.InternalGuiDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelAccess().getAlternatives(), "rule__Model__Alternatives");
					put(grammarAccess.getWidgetAccess().getAlternatives(), "rule__Widget__Alternatives");
					put(grammarAccess.getAttributeAccess().getAlternatives(), "rule__Attribute__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getPrimitiveTypeAccess().getAlternatives(), "rule__PrimitiveType__Alternatives");
					put(grammarAccess.getComparisonLevelAccess().getAlternatives_1_0(), "rule__ComparisonLevel__Alternatives_1_0");
					put(grammarAccess.getAdditionLevelAccess().getAlternatives_1_0(), "rule__AdditionLevel__Alternatives_1_0");
					put(grammarAccess.getMultiplicationLevelAccess().getAlternatives_1_0(), "rule__MultiplicationLevel__Alternatives_1_0");
					put(grammarAccess.getPrefixOpLevelAccess().getAlternatives(), "rule__PrefixOpLevel__Alternatives");
					put(grammarAccess.getAtomicAccess().getAlternatives(), "rule__Atomic__Alternatives");
					put(grammarAccess.getFormAccess().getGroup(), "rule__Form__Group__0");
					put(grammarAccess.getTextWidgetAccess().getGroup(), "rule__TextWidget__Group__0");
					put(grammarAccess.getTextWidgetAccess().getGroup_6(), "rule__TextWidget__Group_6__0");
					put(grammarAccess.getCheckBoxWidgetAccess().getGroup(), "rule__CheckBoxWidget__Group__0");
					put(grammarAccess.getCheckBoxWidgetAccess().getGroup_3(), "rule__CheckBoxWidget__Group_3__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getDerivedAttributeAccess().getGroup(), "rule__DerivedAttribute__Group__0");
					put(grammarAccess.getSimpleAttributeAccess().getGroup(), "rule__SimpleAttribute__Group__0");
					put(grammarAccess.getFloatTypeAccess().getGroup(), "rule__FloatType__Group__0");
					put(grammarAccess.getIntTypeAccess().getGroup(), "rule__IntType__Group__0");
					put(grammarAccess.getBooleanTypeAccess().getGroup(), "rule__BooleanType__Group__0");
					put(grammarAccess.getStringTypeAccess().getGroup(), "rule__StringType__Group__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup(), "rule__ComparisonLevel__Group__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1(), "rule__ComparisonLevel__Group_1__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1_0_0(), "rule__ComparisonLevel__Group_1_0_0__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1_0_1(), "rule__ComparisonLevel__Group_1_0_1__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1_0_2(), "rule__ComparisonLevel__Group_1_0_2__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1_0_3(), "rule__ComparisonLevel__Group_1_0_3__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1_0_4(), "rule__ComparisonLevel__Group_1_0_4__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1_0_5(), "rule__ComparisonLevel__Group_1_0_5__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1_0_6(), "rule__ComparisonLevel__Group_1_0_6__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1_0_7(), "rule__ComparisonLevel__Group_1_0_7__0");
					put(grammarAccess.getComparisonLevelAccess().getGroup_1_0_8(), "rule__ComparisonLevel__Group_1_0_8__0");
					put(grammarAccess.getAdditionLevelAccess().getGroup(), "rule__AdditionLevel__Group__0");
					put(grammarAccess.getAdditionLevelAccess().getGroup_1(), "rule__AdditionLevel__Group_1__0");
					put(grammarAccess.getAdditionLevelAccess().getGroup_1_0_0(), "rule__AdditionLevel__Group_1_0_0__0");
					put(grammarAccess.getAdditionLevelAccess().getGroup_1_0_1(), "rule__AdditionLevel__Group_1_0_1__0");
					put(grammarAccess.getMultiplicationLevelAccess().getGroup(), "rule__MultiplicationLevel__Group__0");
					put(grammarAccess.getMultiplicationLevelAccess().getGroup_1(), "rule__MultiplicationLevel__Group_1__0");
					put(grammarAccess.getMultiplicationLevelAccess().getGroup_1_0_0(), "rule__MultiplicationLevel__Group_1_0_0__0");
					put(grammarAccess.getMultiplicationLevelAccess().getGroup_1_0_1(), "rule__MultiplicationLevel__Group_1_0_1__0");
					put(grammarAccess.getPrefixOpLevelAccess().getGroup_0(), "rule__PrefixOpLevel__Group_0__0");
					put(grammarAccess.getAtomicAccess().getGroup_0(), "rule__Atomic__Group_0__0");
					put(grammarAccess.getAtomicAccess().getGroup_1(), "rule__Atomic__Group_1__0");
					put(grammarAccess.getAtomicAccess().getGroup_2(), "rule__Atomic__Group_2__0");
					put(grammarAccess.getAtomicAccess().getGroup_3(), "rule__Atomic__Group_3__0");
					put(grammarAccess.getAtomicAccess().getGroup_4(), "rule__Atomic__Group_4__0");
					put(grammarAccess.getAtomicAccess().getGroup_5(), "rule__Atomic__Group_5__0");
					put(grammarAccess.getAtomicAccess().getGroup_6(), "rule__Atomic__Group_6__0");
					put(grammarAccess.getAtomicAccess().getGroup_7(), "rule__Atomic__Group_7__0");
					put(grammarAccess.getModelAccess().getEntitiesAssignment_0(), "rule__Model__EntitiesAssignment_0");
					put(grammarAccess.getModelAccess().getFormsAssignment_1(), "rule__Model__FormsAssignment_1");
					put(grammarAccess.getFormAccess().getNameAssignment_1(), "rule__Form__NameAssignment_1");
					put(grammarAccess.getFormAccess().getEntityAssignment_3(), "rule__Form__EntityAssignment_3");
					put(grammarAccess.getFormAccess().getWidgetsAssignment_5(), "rule__Form__WidgetsAssignment_5");
					put(grammarAccess.getTextWidgetAccess().getLengthAssignment_2(), "rule__TextWidget__LengthAssignment_2");
					put(grammarAccess.getTextWidgetAccess().getAttrAssignment_5(), "rule__TextWidget__AttrAssignment_5");
					put(grammarAccess.getTextWidgetAccess().getValidateAssignment_6_1(), "rule__TextWidget__ValidateAssignment_6_1");
					put(grammarAccess.getCheckBoxWidgetAccess().getAttrAssignment_2(), "rule__CheckBoxWidget__AttrAssignment_2");
					put(grammarAccess.getCheckBoxWidgetAccess().getValidateAssignment_3_1(), "rule__CheckBoxWidget__ValidateAssignment_3_1");
					put(grammarAccess.getEntityAccess().getNameAssignment_1(), "rule__Entity__NameAssignment_1");
					put(grammarAccess.getEntityAccess().getAttributesAssignment_3(), "rule__Entity__AttributesAssignment_3");
					put(grammarAccess.getDerivedAttributeAccess().getNameAssignment_1(), "rule__DerivedAttribute__NameAssignment_1");
					put(grammarAccess.getDerivedAttributeAccess().getExprAssignment_3(), "rule__DerivedAttribute__ExprAssignment_3");
					put(grammarAccess.getSimpleAttributeAccess().getNameAssignment_0(), "rule__SimpleAttribute__NameAssignment_0");
					put(grammarAccess.getSimpleAttributeAccess().getTypeAssignment_2(), "rule__SimpleAttribute__TypeAssignment_2");
					put(grammarAccess.getEntityTypeAccess().getRefAssignment(), "rule__EntityType__RefAssignment");
					put(grammarAccess.getComparisonLevelAccess().getRightAssignment_1_1(), "rule__ComparisonLevel__RightAssignment_1_1");
					put(grammarAccess.getAdditionLevelAccess().getRightAssignment_1_1(), "rule__AdditionLevel__RightAssignment_1_1");
					put(grammarAccess.getMultiplicationLevelAccess().getRightAssignment_1_1(), "rule__MultiplicationLevel__RightAssignment_1_1");
					put(grammarAccess.getPrefixOpLevelAccess().getExprAssignment_0_3(), "rule__PrefixOpLevel__ExprAssignment_0_3");
					put(grammarAccess.getAtomicAccess().getExprAssignment_3_3(), "rule__Atomic__ExprAssignment_3_3");
					put(grammarAccess.getAtomicAccess().getExprAssignment_4_2(), "rule__Atomic__ExprAssignment_4_2");
					put(grammarAccess.getAtomicAccess().getValueAssignment_5_1(), "rule__Atomic__ValueAssignment_5_1");
					put(grammarAccess.getAtomicAccess().getValueAssignment_6_1(), "rule__Atomic__ValueAssignment_6_1");
					put(grammarAccess.getAtomicAccess().getAttrAssignment_7_1(), "rule__Atomic__AttrAssignment_7_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.typesys.xts.guidsl.ui.contentassist.antlr.internal.InternalGuiDslParser typedParser = (org.typesys.xts.guidsl.ui.contentassist.antlr.internal.InternalGuiDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public GuiDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(GuiDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
