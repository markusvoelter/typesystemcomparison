With the Xtext framework, building domain specific languages (DSLs) integrated
into the Eclipse IDE has become increasingly popular and viable even for
non-trivial domains. However, sophisticated DSLs may require advanced type
checking capabilities, since they usually include expressions, types and the
notion of type conformance. Various type system frameworks offer reusable
specification and checking facilities for implementing type systems for Xtext
DSLs. In this paper we compare a number of approaches and frameworks for
implementing type systems for Xtext languages regarding flexibility, required
effort and usability. We use a common case study to illustrate the trade-offs
between the various tools.
