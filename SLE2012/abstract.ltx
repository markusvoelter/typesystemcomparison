With the Xtext framework, building domain specific languages (DSLs) integrated
in the Eclipse IDE has become increasingly popular and viable even for complex
domains. However, complex DSLs may require advanced type checking capabilities,
as they usually include expressions, types and type conformance. Type system
frameworks offer reusable checking facilities for implementing DSLs and may
dramatically reduce the effort for writing typing constraints.  In this paper we
present some approaches and frameworks for implementing type systems for Xtext
languages.  We also compare the usability of these mechanisms in different
contexts, so that the techniques presented in this paper can be reused when
implementing other languages.
