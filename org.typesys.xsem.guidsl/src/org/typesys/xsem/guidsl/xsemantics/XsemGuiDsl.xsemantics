system org.typesys.xsem.guidsl.xsemantics.TypeSystem

import org.typesys.xsem.guidsl.xsemGuiDsl.*

judgments {
	attrtype ||- Attribute attribute : output Type
		error "cannot type attribute " + stringRep(attribute)
		source attribute
	exprtype |- Expression expression : output Type
		error "cannot type expression " + stringRep(expression)
		source expression
	// computes whether {@code right} is assignable to {@code left}
	isAssignable |- Type left <~ Type right
		error stringRep(right) + " is not assignable to " + stringRep(left)
	mostGeneral |- Type first ~~ Type second |> output Type
}

axiom SimpleAttributeType
	G ||- SimpleAttribute attr : attr.type

rule DerivedAttributeType
	G ||- DerivedAttribute attr : Type attrType
from {
	G |- attr.expr : attrType
}

axiom BooleanLiteralType
	G |- BooleanLiteral lit : XsemGuiDslFactory::eINSTANCE.createBooleanType

axiom StringLiteralType
	G |- StringLiteral lit : XsemGuiDslFactory::eINSTANCE.createStringType

axiom NumberLiteralType
	G |- NumberLiteral lit : XsemGuiDslFactory::eINSTANCE.createFloatType

rule IsAssignableBase
	G |- Type left <~ Type right
from {
	left.eClass.isSuperTypeOf(right.eClass)
}

axiom BooleanAssignableToString
	G |- StringType left <~ BooleanType right

axiom IntAssignableToString
	G |- StringType left <~ NumberType right

axiom IntAssignableToFloat
	G |- FloatType left <~ IntType right

rule MostGeneral
	G |- Type first ~~ Type second |> Type mostGeneral
from {
	{
		G |- first <~ second
		mostGeneral = first
	} or
		mostGeneral = second
}

checkrule ValidateMustBeBoolean for
	Widget widget
from {
	widget.validate == null
	or {
		empty |- widget.validate : var BooleanType boolType
		or
		fail
			error "validate expression must be boolean"
			source widget.validate
	}
}

checkrule ValidateTextWidgetAttributeNotBoolean for
	TextWidget widget
from {
	empty ||- widget.attr : var Type attrType
	!(attrType instanceof BooleanType)
	or
	fail
		error "text widget attribute must NOT be boolean"
		source widget
		feature XsemGuiDslPackage::eINSTANCE.widget_Attr
}

checkrule ValidateCheckBoxWidgetAttributeBoolean for
	CheckBoxWidget widget
from {
	empty ||- widget.attr : var BooleanType attrType
	or
	fail
		error "checkbox widget attribute must be boolean"
		source widget
		feature XsemGuiDslPackage::eINSTANCE.widget_Attr
}