grammar org.typesys.guidsl.GuiDsl with org.eclipse.xtext.common.Terminals

generate guiDsl "http://www.typesys.org/guidsl/GuiDsl"
	
import "http://www.eclipse.org/emf/2002/Ecore" as ecore	

Model:
	(entities+=Entity | 
	 forms+=Form )*;

/*
 * Form and Widgets 
 */

Form:
	"form" name=ID "edits" entity=[Entity] "{"	
		(widgets+=Widget)*
	"}"
;

Widget:
	TextWidget | CheckBoxWidget 
;

TextWidget:
	"text" "(" length=Number ")" "->" attr=[Attribute] ("validate" validate=Expression)? ";"
;

CheckBoxWidget:
	"checkbox" "->" attr=[Attribute] ("validate" validate=Expression)? ";"
;

/*
 * Entities and types to be referred by forms
 */

Entity:
	"entity" name=ID "{"
		(attributes+=Attribute)*
	"}"
;

Attribute:
	SimpleAttribute | DerivedAttribute
;

DerivedAttribute:
	"/" name=ID "=" expr=Expression ";"
;

SimpleAttribute:
	name=ID ":" type=Type ";"
;

Type:
	PrimitiveType | EntityType
;

EntityType:
	ref=[Entity]
;


PrimitiveType:
	NumberType| BooleanType | StringType
;

NumberType :
	FloatType | IntType
;

FloatType:
	{FloatType} "float"
;

IntType:
	{IntType} "int"
;

BooleanType:
	{BooleanType} "bool"
;

StringType:
	{StringType} "string"
;

/*
 * Expressions, used in DSL form and widget
 */

Expression:
       BooleanExpression;


BooleanExpression returns Expression:
       Comparison
       (({AndOrExpression.left=current} op=("||"|"&&")) right=Comparison)*;

Comparison returns Expression:
       EqualsStuff
       (({Comparison.left=current}
               op=(">="|"<="|"<"|">")
       ) right=EqualsStuff)*;

EqualsStuff returns Expression:
       Addition 
       (({Equality.left=current}
               op=("=="|"!=")
       ) right=Addition)*;

Addition returns Expression:
       Multiplication (({Plus.left=current} '+' | {Minus.left=current} '-') right=Multiplication)*;

Multiplication returns Expression:
       Prefixed (({MultiOrDiv.left=current} op=("*"|"/")) right=Prefixed)*;

Prefixed returns Expression:
       {BooleanNegation} =>"!" expression=Atomic | /* right associativity */
       {ArithmeticSigned} =>"-" expression=Atomic | /* right associativity */
       Atomic
;

Atomic returns Expression:
       '(' Expression ')' |
       ({FieldContent} "widgetcontent") |
       ({LengthOf} "lengthOf" "(" expr=Expression ")" ) |
       ({BooleanLiteral} value=("true"|"false")) |
       ({FloatLiteral} value=Float) |
       ({IntLiteral} value=INT) |
       ({StringLiteral} value=STRING) |
       ({AttributeRef} attr=[Attribute|ID])
;

Float returns ecore::EBigDecimal:
	INT? ('.' INT) 
;

Number returns ecore::EBigDecimal hidden():
	INT ('.' INT)?;

//terminal DECIMAL_NUMBER returns ecore::EBigDecimal:
//	("-")? ('0'..'9')* ('.' ('0'..'9')+)?;

//terminal INT returns ecore::EInt:
//	'�this one has been deactivated�';