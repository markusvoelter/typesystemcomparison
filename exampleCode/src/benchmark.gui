entity Person {
	name      : string;
	firstName : string;
	age       : int; 
	weight    : float;
	likesCake : bool; 
	isAdult = age > 18;
	greeting = "Hello " + firstName + " " + name;
	testExpr = -2 - 2;
}

entity Teacher extends Person {
	subject : string;
}

entity Gym {}

entity School {       
	janitor: Person = new Gym; // error
	head : Person = new Teacher;
	gym  = new Gym;
	gym2 : Gym = new Gym;
}

form SchoolForm edits School {
	text(10) -> head; // error
	text(10) -> head validate widgetcontent; // two errors
}
 
form PersonForm edits Person {
	text (10) -> name validate lengthOf(widgetcontent) < 10;
	text (20) -> firstName;
	text (5) -> age validate widgetcontent > 0 && widgetcontent < 130;
	checkbox -> isAdult validate age > 18 && widgetcontent == true;
	text(5) -> weight validate 12.5 > age;
}

form PersonGreeting edits Person {
	text(20) -> firstName;
    text(20) -> greeting;
}

form PersonFormWithErrors edits Person {
	text(10) -> name validate widgetcontent; // error for widgetcontent
	text(10) -> isAdult;
	text(20) -> likesCake;
	checkbox -> firstName;
	checkbox -> greeting validate likesCake; // 12.5, 2+3.5 
}