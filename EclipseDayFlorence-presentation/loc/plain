packageorg.typesys.guidsl.typesimportcom.google.inject.Injectimportjava.util.Collectionimportorg.eclipse.emf.ecore.EObjectimportorg.eclipse.emf.ecore.EStructuralFeatureimportorg.typesys.guidsl.guiDsl.AndOrExpressionimportorg.typesys.guidsl.guiDsl.ArithmeticSignedimportorg.typesys.guidsl.guiDsl.Attributeimportorg.typesys.guidsl.guiDsl.AttributeRefimportorg.typesys.guidsl.guiDsl.BooleanLiteralimportorg.typesys.guidsl.guiDsl.BooleanNegationimportorg.typesys.guidsl.guiDsl.Comparisonimportorg.typesys.guidsl.guiDsl.CyclicDependencyTypeimportorg.typesys.guidsl.guiDsl.Entityimportorg.typesys.guidsl.guiDsl.EntityTypeimportorg.typesys.guidsl.guiDsl.Equalityimportorg.typesys.guidsl.guiDsl.FieldContentimportorg.typesys.guidsl.guiDsl.FloatLiteralimportorg.typesys.guidsl.guiDsl.GuiDslFactoryimportorg.typesys.guidsl.guiDsl.GuiDslPackage$Literalsimportorg.typesys.guidsl.guiDsl.IntLiteralimportorg.typesys.guidsl.guiDsl.LengthOfimportorg.typesys.guidsl.guiDsl.Minusimportorg.typesys.guidsl.guiDsl.MultiOrDivimportorg.typesys.guidsl.guiDsl.Plusimportorg.typesys.guidsl.guiDsl.StringLiteralimportorg.typesys.guidsl.guiDsl.Typeimportorg.typesys.guidsl.guiDsl.Widgetimportstaticextensionorg.eclipse.xtext.EcoreUtil2.*importorg.typesys.guidsl.guiDsl.FormclassGuiDslTypeProvider{@InjectextensionTypeConformanceconformanceTypebool=GuiDslFactory::eINSTANCE.createBooleanTypeType_float=GuiDslFactory::eINSTANCE.createFloatTypeType_int=GuiDslFactory::eINSTANCE.createIntTypeTypenumber=GuiDslFactory::eINSTANCE.createNumberTypeTypestring=GuiDslFactory::eINSTANCE.createStringTypeTypeprimitive=GuiDslFactory::eINSTANCE.createPrimitiveType@InjectCyclicDependencyTypecyclicTypedefTypegetType(EObjecte){getType(e,newHashSet())}defTypegetType(EObjecte,Collection<EObject>visited){if(visited.contains(e))returncyclicType;visited.add(e)switche{Widget:e.attr.getType(visited)Attributecasee.expr!=null&&e.type!=null&&e.type.isAssignable(e.expr.getType(visited)):e.typeAttributecasee.expr!=null:e.expr.getType(visited)Attributecasee.type!=null:e.typeAttributeRef:e.attr.getType(visited)AndOrExpression:boolComparison:boolEquality:boolPlus:mostGeneral(e.left.getType(visited),e.right.getType(visited))Minus:mostGeneral(e.left.getType(visited),e.right.getType(visited))MultiOrDivcasee.op.equals("*"):mostGeneral(e.left.getType(visited),e.right.getType(visited))MultiOrDivcasee.op.equals("/"):e.left.getType(visited)BooleanNegation:boolArithmeticSigned:numberFieldContent:returne.getContainerOfType(typeof(Widget))?.attr?.getType(visited)LengthOf:_intEntityType:eBooleanLiteral:boolFloatLiteral:_floatIntLiteral:_intStringLiteral:stringdefault:null}}defTypegetExpectedType(EObjecte){internalGetExpectedType(e.eContainer,e.eContainingFeature)}defprotectedTypeinternalGetExpectedType(EObjecte,EStructuralFeaturefeature){switche{Widgetcasefeature==GuiDslPackage$Literals::WIDGET__VALIDATE:boolFormcasefeature==GuiDslPackage$Literals::FORM__WIDGETS:primitiveAttributecasee.type!=null:e.typeAndOrExpression:boolComparison:numberEquality:e.left.typePlus:mostSpecific(string,e.type)Minus:numberMultiOrDiv:numberBooleanNegation:boolArithmeticSigned:numberLengthOf:stringdefault:null}}}packageorg.typesys.guidsl.typesimportcom.google.inject.Injectimportjava.util.Collectionimportorg.eclipse.emf.ecore.EObjectimportorg.eclipse.emf.ecore.EStructuralFeatureimportorg.typesys.guidsl.guiDsl.AndOrExpressionimportorg.typesys.guidsl.guiDsl.ArithmeticSignedimportorg.typesys.guidsl.guiDsl.Attributeimportorg.typesys.guidsl.guiDsl.AttributeRefimportorg.typesys.guidsl.guiDsl.BooleanLiteralimportorg.typesys.guidsl.guiDsl.BooleanNegationimportorg.typesys.guidsl.guiDsl.Comparisonimportorg.typesys.guidsl.guiDsl.CyclicDependencyTypeimportorg.typesys.guidsl.guiDsl.Entityimportorg.typesys.guidsl.guiDsl.EntityTypeimportorg.typesys.guidsl.guiDsl.Equalityimportorg.typesys.guidsl.guiDsl.FieldContentimportorg.typesys.guidsl.guiDsl.FloatLiteralimportorg.typesys.guidsl.guiDsl.GuiDslFactoryimportorg.typesys.guidsl.guiDsl.GuiDslPackage$Literalsimportorg.typesys.guidsl.guiDsl.IntLiteralimportorg.typesys.guidsl.guiDsl.LengthOfimportorg.typesys.guidsl.guiDsl.Minusimportorg.typesys.guidsl.guiDsl.MultiOrDivimportorg.typesys.guidsl.guiDsl.Plusimportorg.typesys.guidsl.guiDsl.StringLiteralimportorg.typesys.guidsl.guiDsl.Typeimportorg.typesys.guidsl.guiDsl.Widgetimportstaticextensionorg.eclipse.xtext.EcoreUtil2.*importorg.typesys.guidsl.guiDsl.FormclassGuiDslTypeProvider{@InjectextensionTypeConformanceconformanceTypebool=GuiDslFactory::eINSTANCE.createBooleanTypeType_float=GuiDslFactory::eINSTANCE.createFloatTypeType_int=GuiDslFactory::eINSTANCE.createIntTypeTypenumber=GuiDslFactory::eINSTANCE.createNumberTypeTypestring=GuiDslFactory::eINSTANCE.createStringTypeTypeprimitive=GuiDslFactory::eINSTANCE.createPrimitiveType@InjectCyclicDependencyTypecyclicTypedefTypegetType(EObjecte){getType(e,newHashSet())}defTypegetType(EObjecte,Collection<EObject>visited){if(visited.contains(e))returncyclicType;visited.add(e)switche{Widget:e.attr.getType(visited)Attributecasee.expr!=null&&e.type!=null&&e.type.isAssignable(e.expr.getType(visited)):e.typeAttributecasee.expr!=null:e.expr.getType(visited)Attributecasee.type!=null:e.typeAttributeRef:e.attr.getType(visited)AndOrExpression:boolComparison:boolEquality:boolPlus:mostGeneral(e.left.getType(visited),e.right.getType(visited))Minus:mostGeneral(e.left.getType(visited),e.right.getType(visited))MultiOrDivcasee.op.equals("*"):mostGeneral(e.left.getType(visited),e.right.getType(visited))MultiOrDivcasee.op.equals("/"):e.left.getType(visited)BooleanNegation:boolArithmeticSigned:numberFieldContent:returne.getContainerOfType(typeof(Widget))?.attr?.getType(visited)LengthOf:_intEntityType:eBooleanLiteral:boolFloatLiteral:_floatIntLiteral:_intStringLiteral:stringdefault:null}}defTypegetExpectedType(EObjecte){internalGetExpectedType(e.eContainer,e.eContainingFeature)}defprotectedTypeinternalGetExpectedType(EObjecte,EStructuralFeaturefeature){switche{Widgetcasefeature==GuiDslPackage$Literals::WIDGET__VALIDATE:boolFormcasefeature==GuiDslPackage$Literals::FORM__WIDGETS:primitiveAttributecasee.type!=null:e.typeAndOrExpression:boolComparison:numberEquality:e.left.typePlus:mostSpecific(string,e.type)Minus:numberMultiOrDiv:numberBooleanNegation:boolArithmeticSigned:numberLengthOf:stringdefault:null}}}packageorg.typesys.guidsl.typesimportjava.util.Collectionimportorg.typesys.guidsl.guiDsl.Entityimportorg.typesys.guidsl.guiDsl.EntityTypeimportorg.typesys.guidsl.guiDsl.FloatTypeimportorg.typesys.guidsl.guiDsl.IntTypeimportorg.typesys.guidsl.guiDsl.NumberTypeimportorg.typesys.guidsl.guiDsl.StringTypeimportorg.typesys.guidsl.guiDsl.TypeclassTypeConformance{defdispatchisAssignable(Typeleft,Typeright){left.eClass==right.eClass||right.eClass.EAllSuperTypes.contains(left.eClass)}defdispatchisAssignable(EntityTypeleft,EntityTyperight){internalIsAssignable(left.ref,right.ref,newHashSet())}definternalIsAssignable(Entityleft,Entityright,Collection<Entity>visited){if(visited.contains(right))returnfalse;visited.add(right)left==right||(right.superType!=null&&internalIsAssignable(left,right.superType,visited))}defdispatchisAssignable(FloatTypeleft,IntTyperight){true}defdispatchisAssignable(StringTypeleft,NumberTyperight){true}defdispatchisAssignable(Typeleft,Voidright){false}defdispatchisAssignable(Voidleft,Typeright){false}defTypemostGeneral(Typeone,Typetwo){if(isAssignable(one,two))oneelsetwo}defTypemostSpecific(Typeone,Typetwo){if(isAssignable(one,two))twoelseone}}packageorg.typesys.guidsl.validation;importorg.eclipse.emf.ecore.EObject;importorg.eclipse.emf.ecore.EStructuralFeature;importorg.eclipse.xtext.validation.Check;importorg.typesys.guidsl.guiDsl.Attribute;importorg.typesys.guidsl.guiDsl.CheckBoxWidget;importorg.typesys.guidsl.guiDsl.CyclicDependencyType;importorg.typesys.guidsl.guiDsl.Expression;importorg.typesys.guidsl.guiDsl.GuiDslPackage;importorg.typesys.guidsl.guiDsl.TextWidget;importorg.typesys.guidsl.guiDsl.Type;importorg.typesys.guidsl.guiDsl.Widget;importorg.typesys.guidsl.types.GuiDslTypeProvider;importorg.typesys.guidsl.types.TypeConformance;importcom.google.inject.Inject;packageorg.typesys.guidsl.typesimportjava.util.Collectionimportorg.typesys.guidsl.guiDsl.Entityimportorg.typesys.guidsl.guiDsl.EntityTypeimportorg.typesys.guidsl.guiDsl.FloatTypeimportorg.typesys.guidsl.guiDsl.IntTypeimportorg.typesys.guidsl.guiDsl.NumberTypeimportorg.typesys.guidsl.guiDsl.StringTypeimportorg.typesys.guidsl.guiDsl.TypeclassTypeConformance{defdispatchisAssignable(Typeleft,Typeright){left.eClass==right.eClass||right.eClass.EAllSuperTypes.contains(left.eClass)}defdispatchisAssignable(EntityTypeleft,EntityTyperight){internalIsAssignable(left.ref,right.ref,newHashSet())}definternalIsAssignable(Entityleft,Entityright,Collection<Entity>visited){if(visited.contains(right))returnfalse;visited.add(right)left==right||(right.superType!=null&&internalIsAssignable(left,right.superType,visited))}defdispatchisAssignable(FloatTypeleft,IntTyperight){true}defdispatchisAssignable(StringTypeleft,NumberTyperight){true}defdispatchisAssignable(Typeleft,Voidright){false}defdispatchisAssignable(Voidleft,Typeright){false}defTypemostGeneral(Typeone,Typetwo){if(isAssignable(one,two))oneelsetwo}defTypemostSpecific(Typeone,Typetwo){if(isAssignable(one,two))twoelseone}}publicclassGuiDslJavaValidatorextendsAbstractGuiDslJavaValidator{publicfinalstaticStringINCOMPATIBLE_TYPES="incompatible_types";@InjectprivateGuiDslTypeProviderguiDslTypeProvider;@InjectprivateTypeConformanceconformance;@Checkpublicvoidcheck(Expressionexpr){checkType(expr);}@Checkpublicvoidcheck(TextWidgetwidget){Typetype=guiDslTypeProvider.getType(widget.getAttr());if(type.eClass()==GuiDslPackage.Literals.BOOLEAN_TYPE){error("Atextwidgetmaynotrefertoabooleanattribute.",GuiDslPackage.Literals.WIDGET__ATTR,INCOMPATIBLE_TYPES);}}@Checkvoidcheck(CheckBoxWidgetwidget){Typetype=guiDslTypeProvider.getType(widget.getAttr());if(type.eClass()!=GuiDslPackage.Literals.BOOLEAN_TYPE){error("Checkboxwidgetmayonlyrefertobooleanattributes.",GuiDslPackage.Literals.WIDGET__ATTR,INCOMPATIBLE_TYPES);}}@CheckvoidcheckWidget(Widgetwidget){checkType(widget,GuiDslPackage.Literals.WIDGET__ATTR);}protectedvoidcheckType(EObjectobject){checkType(object,null);}protectedvoidcheckType(EObjectobject,EStructuralFeaturefeature){TypeexpectedType=guiDslTypeProvider.getExpectedType(object);TypeactualType=guiDslTypeProvider.getType(object);if(actualTypeinstanceofCyclicDependencyType){error("Typeispartofacyclicdependency.",feature,INCOMPATIBLE_TYPES);return;}if(expectedType==null)return;if(!conformance.isAssignable(expectedType,actualType)){error("Incompatibletypes.Expected'"+expectedType+"'butwas'"+actualType+"'",feature,INCOMPATIBLE_TYPES);}}}